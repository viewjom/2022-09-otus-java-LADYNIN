plugins {
    id 'java'
    id 'org.springframework.boot'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation("org.springframework.boot:spring-boot-starter-test")

    implementation("org.springframework.boot:spring-boot-starter-amqp")
    implementation 'org.apache.kafka:kafka-clients'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    testImplementation "org.testcontainers:kafka"

    implementation("com.google.code.gson:gson")


    implementation 'ch.qos.logback:logback-classic'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.postgresql:postgresql'
    //  implementation 'com.google.code.findbugs:jsr305'
    implementation 'org.bouncycastle:bcpg-jdk15on:1.56'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.56'

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'org.projectlombok:lombok:1.18.22'

}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}


compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.with {
        encoding = 'UTF-8'
    }
}